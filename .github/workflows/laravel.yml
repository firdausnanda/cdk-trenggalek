name: Laravel Tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

env:
  DOCKER_IMAGE: firdausnanda46/cdk-trenggalek
  DOCKER_TAG: latest
  APP_PORT: 8000

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testing_database
          MYSQL_USER: tester
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
  
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, dom, fileinfo, mysql, curl
          tools: composer:v2
      
      - name: Copy .env
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=testing_database" >> .env
          echo "DB_USERNAME=tester" >> .env
          echo "DB_PASSWORD=password" >> .env
      
      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      
      - name: Generate key
        run: php artisan key:generate
      
      - name: Set directory permissions
        run: chmod -R 777 storage bootstrap/cache
      
      - name: Run migrations and seed
        run: php artisan migrate:fresh --seed

  build-and-deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            ${{ env.DOCKER_IMAGE }}:$(date +%Y%m%d%H%M%S)
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker compose -f docker-compose.prod.yml down || true
            
            docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
            
            mkdir -p /var/www/storage
            mkdir -p /var/www/storage/framework/{cache,sessions,views}
            
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
