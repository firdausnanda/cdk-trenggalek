name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: mbstring, xml, mysql, gd, bcmath, redis
        tools: composer:v2

    - name: Copy .env
      run: |
        cp .env.example .env
        sed -i 's/DB_HOST=.*/DB_HOST=mysql/' .env
        sed -i 's/REDIS_HOST=.*/REDIS_HOST=redis/' .env
        cat .env

    - name: Install Dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Generate Key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

  build-and-deploy:
    needs: laravel-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
    - name: Install dependencies
      run: composer install --no-dev --no-interaction --optimize-autoloader --no-plugins

    - name: Build and push Docker image
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        DOCKER_BUILDKIT=1 docker build \
          --secret id=GITHUB_TOKEN,env=GITHUB_TOKEN \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek:latest \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek:${{ github.sha }} .

        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek:${{ github.sha }}

        docker save -o cdk-trenggalek.tar ${{ secrets.DOCKER_HUB_USERNAME }}/cdk-trenggalek:latest

    - name: SSH and deploy
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts

            git config --global core.sshCommand "ssh -i ~/.ssh/id_rsa -o IdentitiesOnly=yes -F /dev/null"
            git config --global url."https://${{ secrets.GH_TOKEN }}@github.com/".insteadOf "https://github.com/"
                
            cd /home/kda/cdk-trenggalek
            git fetch origin main
            git reset --hard origin/main
            
            docker-compose down --remove-orphans
            if ! docker-compose pull; then
              echo "Image pull failed, loading from backup..."
              docker load -i cdk-trenggalek.tar
            fi
            docker-compose up -d
            
            docker-compose exec -T app composer install --no-interaction --optimize-autoloader --no-dev
            docker-compose exec -T app php artisan migrate --force
            docker-compose exec -T app php artisan cache:clear
            docker-compose exec -T app php artisan view:clear
            docker-compose exec -T app php artisan config:cache